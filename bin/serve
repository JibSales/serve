#!/usr/bin/env node

// Load Modules
var join = require('path').join;
var resolve = require('path').resolve;
var fs = require('fs');
var program = require('commander');
var connect = require('connect');

// Load Middleware
var favicon = require('serve-favicon');
var logger = require('morgan');
var livereload = require('connect-livereload');
var modRewrite = require('connect-modrewrite');
var compression = require('compression');
var static = require('serve-static');

// CLI
program
  .version(require('../package.json').version)
  .usage('[options] [dir]')
  .option('-F, --format <fmt>', 'specify the log format string', 'dev')
  .option('-p, --port <port>', 'specify the port [3000]', Number, 3000)
  .option('-L, --no-logs', 'disable request logging')
  .option('-R, --livereload', 'inject livereload script to response')
  .option('-P, --pushstate', 'enable HTML5 pushstate support')
  .parse(process.argv);

// Set the array of directories to serve
var paths = program.args.length === 0 ? ['.'] : program.args;

// Create the server
var server = connect();

// favicon
paths.forEach(function (path) {
  var ico = join(path, 'favicon.ico');
  if (fs.existsSync(ico)) {
    server.use(favicon(ico));  
  }
});

// logger
if (program.logs) server.use(logger(program.format));

// livereload
if (program.livereload) server.use(livereload());

// handle HTML5 PushState
if (program.pushstate) {
  server.use(modRewrite([
    '!\\.html|\\.js|\\.json|\\.csv|\\.css|\\.png|\\.svg|\\.eot|\\.ttf|\\.woff|\\.appcache|\\.jpg|\\.jpeg|\\.gif /index.html [L]'
  ]));
}

// compress files
server.use(compression());

// serve multiple static file directories
paths.forEach(function (path) {
  server.use(static(path));  
});

// start the server
server.listen(program.port, function () {
  console.log('\033[90m\nServing \033[36m%s\033[90m on port \033[35m%d\033[0m\n', paths.join('\033[90m and \033[36m'), program.port);
});




